from numpy import*
import random
import time
from operator import*
from math import*
import rf1
d=5
def bootstrapping(dataSet,q):      ##pass dataset and number of  bootstrap sample
     sub=[]
     cT=[]
     bStrap,oob=bootstrap(dataSet,q)
     return bStrap,oob

## function for bootstrapping of dataset
def bootstrap(dat,q):
     l=len(dat)
     bs=[]
     bbs=[]
     oob=[]
     p=dat[0]
     for x in range(q):
          bs=sampl(dat)
          bbs.append(bs)
          ob=[]
          for i in dat[1:]:
            if i not in bs:
                ob.append(i)
          oob.append(ob)
     for i in range(len(bbs)):
          bbs[i].insert(0,p)

     return bbs,oob

def sampl(dat):
     w=[]
     l=len(dat)
     for i in range(l-1):
          oo=random.choice(dat[1:])
          w.append(oo)
          #ww=mat(w)
     return w




#----#----#------#------#


dat=rf1.createDataSet('tictac.txt')
l=dat[0]
l2=l.copy()
Bsamples,oob=bootstrapping(dat,b)             ## oob is out of bag samples, b is number of bootstrap samples

rf=[]
for b in range(B):
    rf.append(rf1.createTree(Bsamples[b],Bsamples[b][0],4))



l3=l2.copy()
def avgRunner(rf,oob):
    acuu=[]
    for i in range(len(rf)):
        v=[]
        for item in oob[i]:
            f1=item[:-1]
            f2=item[-1]
            b=rf1.vote(f1,rf,l2)
            if b==f2:
                a='t'
            else:a='f'
            v.extend(a)
##    tf=['t','f']
        t1=v.count('t')
        fa=v.count('f')
        acuu.append(t1/len(oob[i]))
    return acuu

ac=avgRunner(rf,oob)
    ##print(t1/len(z1))

def avgRunner1(rfs,b):
    acuu=[]
    v=[]
    for item in b:
        f1=item[:-1]
        f2=item[-1]
        b=rf1.classify(rfs,l2,f1)
        if b==f2:
            a='t'
        else:a='f'
        v.extend(a)

    t1=v.count('t')
    fa=v.count('f')
    return t1/len(b)

sAvg=[]
for i in range(len(l3)-1):
    acc=[]
    for j in range(len(oob)):
        m=mat(oob[j])
        random.shuffle(m[:,i])
        obj=m.tolist()
        avg=avgRunner1(rf[j],obj)
        acc.append(avg)

    sAvg.append(acc)


xxx=[]
cc=0
for i in range(len(sAvg)):
	cc=subtract(ac,sAvg[i])
	xl=[]

	for j in cc:
		t=linalg.norm(j)
		xl.append(t)
		s=sum(xl)
		s=s/len(xl)
	xxx.append(s)

dic={}
for i in range(len(xxx)):
        dic[i]=xxx[i]
sss=sorted(dic.items(),key=operator.itemgetter(1), reverse=True)
sc=[]
for i in range(len(sss)):
    sc.append(sss[i][0])
print(xxx)
print('important variables with descending order of their importnace :\n',sc)
